services:
  client_server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./server/prisma:/app
    env_file:
      - .env
    environment:
      - DEBUG=True
      - DJANGO_SETTINGS_MODULE=prisma.settings
      - DJANGO_ALLOWED_HOSTS=*
    command: python manage.py runserver 0.0.0.0:8000 
    networks:
      - prisma_shared_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  client_celery_worker:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: celery -A prisma.celery worker --loglevel=info
    volumes:
      - ./server/prisma:/app
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=prisma.settings
      - CELERY_BROKER_URL=redis://prisma_redis:6379/0
      - REDIS_HOST=prisma_redis
      - CELERY_RESULT_BACKEND=redis://prisma_redis:6379/1
      - CELERY_WORKER_CONCURRENCY=3
    depends_on:
      - prisma_redis
      - client_server
    networks:
      - prisma_shared_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  prisma_redis:
    image: redis:7-alpine
    env_file:
      - .env
    ports:
      - "6380:6379"
    volumes:
      - ./redis/data:/data
    networks:
      - prisma_shared_net

  nginx:
    image: nginx:stable-alpine
    container_name: prisma_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/html/static:/usr/share/nginx/html/static:ro
    depends_on:
      - client_server
      - prisma_redis
      - client_celery_worker
    networks:
      - prisma_shared_net

  job_acceptance_subscriber:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: python manage.py subscribe_redis
    volumes:
      - ./server/prisma:/app
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=prisma.settings
      - REDIS_HOST=prisma_redis
    depends_on:
      - prisma_redis
    restart: always
    networks:
      - prisma_shared_net

  chat_subscriber:
    build:
      context: ./server
      dockerfile: Dockerfile
    command: python manage.py chat_subscriber
    volumes:
      - ./server/prisma:/app
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=prisma.settings
      - REDIS_HOST=prisma_redis
    depends_on:
      - client_server
      - prisma_redis
    networks:
      - prisma_shared_net

volumes:
  redis_data:
  postgres_data:

networks:
  prisma_shared_net:
    external: true
